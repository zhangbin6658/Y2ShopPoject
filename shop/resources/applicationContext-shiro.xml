<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd      
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
  	
  	<!--shiro注解授权的spring配置 1：开启aop 类代理  -->
  	<aop:config proxy-target-class="true"></aop:config>
  	<!--第二步，shiro注解的开启  -->
  	<bean class = "org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
  		<property name="securityManager" ref= "securityManager"></property>
  	</bean>
  	
	<!--web.xml配置的过滤器对应的bean  -->
	<bean id = "shiroFilter" class = "org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		
			<property name="filterChainDefinitions">
			<value>
			<!--对静态资源进行匿名访问  -->
			 /statics/** = anon 
			 
			 /index.html = anon 
			 
			 <!-- /logout.action = logout -->
			<!--/** = authc 代表所有的url必须经过认证才可以访问  -->
			/** = authc
			<!-- /sysmgr/getDictList.action=perms[dict:query] -->
			<!--anon代表匿名记录过滤器 所有的url都是匿名访问地址  -->
			 <!-- /** = anon  -->
			</value>					
		</property>
		
		<!--如果没有指定要跳转的登陆地址，那就默认登陆地址为login.jsp -->
		<property name="loginUrl" value = "/toLogin.html"></property>
		<!--验证成功需要返回指定的地址  -->
		<property name="successUrl" value= "/index.html"/>
		<!-- <property name="unauthorizedUrl" value="/index.jsp"></property> -->
		<property name="filters">
			<map>
				<entry key = "authc" value-ref="loginFormAuthFilter"></entry>
			</map>		
		</property>
	
		
	</bean>
	 
 	<!--安全管理器 SecurityManager  -->
 	<bean id = "securityManager" class= "org.apache.shiro.web.mgt.DefaultWebSecurityManager">
 		<property name="realm" ref = "userRealm"></property>
 		<property name="cacheManager" ref = "cacheManager"></property>
 		<property name="sessionManager" ref = "sessionManager"></property>
 		
 	</bean>
 		
 	<!--自定义realm  -->
 	<bean id="userRealm" class= "com.mast.shop.security.UserRealm">
 		<!--userRealm引入凭证匹配器  -->
 		<property name="credentialsMatcher" ref = "credentialsMatcher"></property>
 	</bean>
 	
 	<!--定义凭证匹配器  -->
 	<bean id = "credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
 			<property name="hashAlgorithmName" value = "SHA-1" />
 			<property name="hashIterations" value="1024"/>
 	</bean>
 	
 	<!--定义缓存管理器 -->
 	<bean id ="cacheManager" class= "org.apache.shiro.cache.ehcache.EhCacheManager">
 		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
 	</bean>
 	
 	<!--定义sessionManager -->
 	<bean id = "sessionManager" class = "org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
 		<!--session的失效时间  -->
 		<property name="globalSessionTimeout" value="3600000"></property>
 		<!--定时清理失效的会话 -->
 		<property name="sessionValidationInterval" value="1800000"></property>
 	
 	</bean>
 	
 	
 	<!--注册自定义的过滤器  -->
 	<bean id = "loginFormAuthFilter" class = "com.mast.shop.security.LoginFormAuthticationFilter"></bean>
</beans>